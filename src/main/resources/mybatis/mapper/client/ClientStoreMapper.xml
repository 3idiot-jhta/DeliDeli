<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.jhta.app.delideli.client.store.mapper.ClientStoreMapper">

    <resultMap id="StoreInfoResultMap" type="kr.co.jhta.app.delideli.client.store.domain.ClientStoreInfo">
        <id property="storeInfoKey" column="storeInfo_key"/>
        <result property="clientKey" column="client_key"/>
        <result property="storeName" column="store_name"/>
        <result property="storeAddress" column="store_address"/>
        <result property="storeZipcode" column="store_zipcode"/>
        <result property="storeAddrDetail" column="store_addrs_detail"/>
        <result property="storePhone" column="store_phone"/>
        <result property="minOrderAmount" column="min_order_amount"/>
        <result property="orderAmount1" column="order_amount1"/>
        <result property="deliveryAmount1" column="delivery_amount1"/>
        <result property="orderAmount2" column="order_amount2"/>
        <result property="deliveryAmount2" column="delivery_amount2"/>
        <result property="orderAmount3" column="order_amount3"/>
        <result property="deliveryAmount3" column="delivery_amount3"/>
        <result property="openTime" column="open_time"/>
        <result property="closeTime" column="close_time"/>
        <result property="storeDetailInfo" column="store_detail_info"/>
        <result property="storeOriginInfo" column="store_origin_info"/>
        <result property="storeBusinessRegistrationFile" column="store_business_registration_file"/>
        <result property="storeBusinessReportFile" column="store_business_report_file"/>
        <result property="storeProfileImg" column="store_profile_img"/>
        <result property="storeAccess" column="store_access"/>
        <result property="storeDelete" column="store_delete"/>
        <result property="storePause" column="store_pause"/>
        <result property="storeRegdate" column="store_regdate"/>
        <result property="storeUpdate" column="store_update"/>
    </resultMap>

    <!-- 가게 정보 등록 -->
    <insert id="insertStore" useGeneratedKeys="true" keyProperty="storeInfoKey">
        INSERT INTO storeInfo (
            client_key, store_name, store_address, store_zipcode, store_addrs_detail, store_phone,
            min_order_amount, order_amount1, delivery_amount1, order_amount2, delivery_amount2,
            delivery_amount3, open_time, close_time, store_detail_info, store_origin_info,
            store_business_registration_file, store_business_report_file, store_profile_img
        ) VALUES (
             #{clientKey}, #{storeName}, #{storeAddress}, #{storeZipcode}, #{storeAddrDetail}, #{storePhone},
             #{minOrderAmount}, #{orderAmount1}, #{deliveryAmount1}, #{orderAmount2}, #{deliveryAmount2},
             #{deliveryAmount3}, #{openTime}, #{closeTime}, #{storeDetailInfo}, #{storeOriginInfo},
             #{storeBusinessRegistrationFile}, #{storeBusinessReportFile}, #{storeProfileImg}
                 )
    </insert>

    <select id="getAllStore" resultMap="StoreInfoResultMap" parameterType="int">
        SELECT * FROM storeInfo WHERE client_key = #{clientKey}
        ORDER BY store_access DESC, store_delete ASC, store_regdate ASC
    </select>

    <!--사장님 가게 영업일시정지 업데이트-->
    <update id="updateStorePause" parameterType="map">
        UPDATE storeInfo
        SET store_pause = #{pause}
        WHERE storeInfo_key = #{storeInfoKey}
    </update>

    <!-- 사장님 가게 일시정지 상태 조회 -->
    <select id="getStorePauseState" parameterType="int" resultType="boolean">
        SELECT store_pause
        FROM storeInfo
        WHERE storeInfo_key = #{storeInfoKey}
    </select>

    <!-- 가게 세부 정보 불러오기 -->
    <select id="getStoreDetail" parameterType="int" resultMap="StoreInfoResultMap">
        SELECT *
        FROM storeInfo
        WHERE storeInfo_key = #{storeInfoKey}
    </select>

    <!-- 필터링 조건에 따른 가게 목록 -->
    <select id="filterStores" resultMap="StoreInfoResultMap" parameterType="map">
        SELECT *
        FROM storeInfo
        WHERE client_key = #{clientKey}
        <if test="storeName != null and storeName != ''">
            AND store_name LIKE CONCAT('%', #{storeName}, '%')
        </if>
        <if test="storeAccess != null and storeAccess != ''">
            AND store_access = #{storeAccess}
        </if>
        <if test="businessStatus != null and businessStatus != ''">
            AND (CASE
            WHEN store_delete = true THEN '삭제 대기'
            WHEN store_pause = true THEN '일시정지'
            ELSE '영업중'
            END) = #{businessStatus}
        </if>
        ORDER BY store_access DESC, store_delete ASC, store_regdate ASC
    </select>

    <!-- 페이징을 위한 필터링된 가게 목록 -->
    <select id="filterStoresWithPaging" resultMap="StoreInfoResultMap" parameterType="map">
        SELECT *
        FROM storeInfo
        WHERE client_key = #{clientKey}
        <if test="storeName != null and storeName != ''">
            AND store_name LIKE CONCAT('%', #{storeName}, '%')
        </if>
        <if test="storeAccess != null and storeAccess != ''">
            AND store_access = #{storeAccess}
        </if>
        <if test="businessStatus != null and businessStatus != ''">
            AND (CASE
            WHEN store_delete = true THEN '삭제 대기'
            WHEN store_pause = true THEN '일시정지'
            ELSE '영업중'
            END) = #{businessStatus}
        </if>
        ORDER BY store_access DESC, store_delete ASC, store_regdate ASC
        LIMIT #{startNo}, #{pageSize}
    </select>

    <!-- 필터링된 가게 목록의 총 수 -->
    <select id="getTotalStores" resultType="int" parameterType="map">
        SELECT COUNT(*)
        FROM storeInfo
        WHERE client_key = #{clientKey}
        <if test="storeName != null and storeName != ''">
            AND store_name LIKE CONCAT('%', #{storeName}, '%')
        </if>
        <if test="storeAccess != null and storeAccess != ''">
            AND store_access = #{storeAccess}
        </if>
        <if test="businessStatus != null and businessStatus != ''">
            AND (CASE
            WHEN store_delete = true THEN '삭제 대기'
            WHEN store_pause = true THEN '일시정지'
            ELSE '영업중'
            END) = #{businessStatus}
        </if>
    </select>

    <!-- store_delete 상태 가져오기 -->
    <select id="getStoreDeleteState" parameterType="int" resultType="boolean">
        SELECT store_delete
        FROM storeInfo
        WHERE storeInfo_key = #{storeInfoKey}
    </select>

    <!-- store_delete 상태 업데이트 -->
    <update id="updateStoreDelete" parameterType="map">
        UPDATE storeInfo
        SET store_delete = #{deleteState}
        WHERE storeInfo_key = #{storeInfoKey}
    </update>

    <!-- 가게 정보 업데이트 -->
    <update id="updateStoreInfo" parameterType="kr.co.jhta.app.delideli.client.store.domain.ClientStoreInfo">
        UPDATE storeInfo
        SET
            store_name = #{storeName},
            store_address = #{storeAddress},
            store_zipcode = #{storeZipcode},
            store_addrs_detail = #{storeAddrDetail},
            store_phone = #{storePhone},
            min_order_amount = #{minOrderAmount},
            order_amount1 = #{orderAmount1},
            delivery_amount1 = #{deliveryAmount1},
            order_amount2 = #{orderAmount2},
            delivery_amount2 = #{deliveryAmount2},
            order_amount3 = #{orderAmount3},
            delivery_amount3 = #{deliveryAmount3},
            open_time = #{openTime},
            close_time = #{closeTime},
            store_detail_info = #{storeDetailInfo},
            store_origin_info = #{storeOriginInfo},
            store_business_registration_file = #{storeBusinessRegistrationFile},
            store_business_report_file = #{storeBusinessReportFile},
            store_profile_img = #{storeProfileImg},
            store_update = CURRENT_TIMESTAMP
        WHERE storeInfo_key = #{storeInfoKey}
    </update>

    <!-- 가게 목록 페이징 처리 -->
    <select id="getAllStoreWithPaging" resultMap="StoreInfoResultMap" parameterType="map">
        SELECT *
        FROM storeInfo
        WHERE client_key = #{clientKey}
        ORDER BY store_access DESC, store_delete ASC, store_regdate ASC
            LIMIT #{startNo}, #{pageSize}
    </select>

    <!-- 클라이언트 키에 따른 전체 가게 수 -->
    <select id="getTotalStoreCountByClientKey" resultType="int" parameterType="int"> <!-- 이름 변경 -->
        SELECT COUNT(*)
        FROM storeInfo
        WHERE client_key = #{clientKey}
    </select>

</mapper>
