<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.jhta.app.delideli.user.cart.mapper.CartMapper">

    <!-- Cart 객체에 대한 resultMap 정의 -->
    <resultMap id="CartResultMap" type="kr.co.jhta.app.delideli.user.cart.domain.Cart">
        <id property="cartKey" column="cart_key"/>
        <result property="userKey" column="user_key"/>
        <result property="menuKey" column="menu_key"/>
        <result property="quantity" column="quantity"/>
        <result property="cartRegdate" column="cart_regdate"/>

        <!-- 메뉴와 가게 정보를 추가로 매핑 -->
        <association property="menu" javaType="kr.co.jhta.app.delideli.user.store.domain.Menu">
            <result property="menuName" column="menu_name"/>
            <result property="menuImg" column="menu_img"/>
            <result property="menuPrice" column="menu_price"/>
        </association>

        <association property="storeInfo" javaType="kr.co.jhta.app.delideli.user.store.domain.StoreInfo">
            <id property="storeInfoKey" column="storeInfo_key"/>
            <result property="clientKey" column="client_key"/>
            <result property="storeName" column="store_name"/>
            <result property="storeAddress" column="store_address"/>
            <result property="storeZipcode" column="store_zipcode"/>
            <result property="storeAddrDetail" column="store_addrs_detail"/>
            <result property="storePhone" column="store_phone"/>
            <result property="minOrderAmount" column="min_order_amount"/>
            <result property="orderAmount1" column="order_amount1"/>
            <result property="deliveryAmount1" column="delivery_amount1"/>
            <result property="orderAmount2" column="order_amount2"/>
            <result property="deliveryAmount2" column="delivery_amount2"/>
            <result property="orderAmount3" column="order_amount3"/>
            <result property="deliveryAmount3" column="delivery_amount3"/>
            <result property="openTime" column="open_time"/>
            <result property="closeTime" column="close_time"/>
            <result property="storeDetailInfo" column="store_detail_info"/>
            <result property="storeOriginInfo" column="store_origin_info"/>
            <result property="storeBusinessRegistrationFile" column="store_business_registration_file"/>
            <result property="storeBusinessReportFile" column="store_business_report_file"/>
            <result property="storeProfileImg" column="store_profile_img"/>
            <result property="storeAccess" column="store_access"/>
            <result property="storeDelete" column="store_delete"/>
            <result property="storeRegdate" column="store_regdate"/>
            <result property="storeUpdate" column="store_update"/>
        </association>

        <!-- CartOptions에 대한 매핑 -->
        <collection property="cartOptions" ofType="kr.co.jhta.app.delideli.user.cart.domain.CartOptions">
            <id property="cartOptionKey" column="cart_option_key"/>
            <result property="optionKey" column="option_key"/>
            <result property="optionPrice" column="option_price"/>
            <result property="optionName" column="option_name"/>
        </collection>
    </resultMap>

    <!-- 장바구니 아이템을 사용자 키로 가져오는 쿼리 -->
    <select id="getCartItemsByUser" parameterType="int" resultMap="CartResultMap">
        SELECT c.*, m.menu_name, m.menu_img, m.menu_price, s.*,
               co.cart_option_key, co.option_key, co.option_price, co.option_name
        FROM cart c
                 JOIN menu m ON c.menu_key = m.menu_key
                 JOIN storeInfo s ON m.storeInfo_key = s.storeInfo_key
                 LEFT JOIN cart_options co ON c.cart_key = co.cart_key
        WHERE c.user_key = #{userKey}
    </select>

    <!-- 장바구니에 항목을 추가하는 쿼리 -->
    <insert id="insertCartItem" parameterType="kr.co.jhta.app.delideli.user.cart.domain.Cart" useGeneratedKeys="true" keyProperty="cartKey">
        INSERT INTO cart (user_key, menu_key, quantity)
        VALUES (#{userKey}, #{menuKey}, #{quantity})
    </insert>

    <!-- 장바구니에 옵션을 추가하는 쿼리 -->
    <insert id="insertCartOption" parameterType="kr.co.jhta.app.delideli.user.cart.domain.CartOptions">
        INSERT INTO cart_options (cart_key, option_key, option_price, option_name)
        VALUES (#{cartKey}, #{optionKey}, #{optionPrice}, #{optionName})
    </insert>

    <!-- 장바구니에서 항목을 삭제하는 쿼리 -->
    <delete id="deleteCartItem" parameterType="int">
        DELETE FROM cart WHERE cart_key = #{cartKey}
    </delete>

    <!-- 특정 cartKey로 장바구니 항목을 가져오는 쿼리 -->
    <select id="getCartItemById" parameterType="int" resultMap="CartResultMap">
        SELECT c.*, m.menu_name, m.menu_img, m.menu_price, s.*,
               co.cart_option_key, co.option_key, co.option_price, co.option_name
        FROM cart c
                 JOIN menu m ON c.menu_key = m.menu_key
                 JOIN storeInfo s ON m.storeInfo_key = s.storeInfo_key
                 LEFT JOIN cart_options co ON c.cart_key = co.cart_key
        WHERE c.cart_key = #{cartKey}
    </select>

    <!-- 장바구니 항목 수량 업데이트 쿼리 -->
    <update id="updateCartItemQuantity">
        UPDATE cart SET quantity = #{quantity} WHERE cart_key = #{cartKey}
    </update>

    <!-- 장바구니 옵션 삭제 쿼리 -->
    <delete id="deleteCartOptions">
        DELETE FROM cart_options WHERE cart_key = #{cartKey}
    </delete>


</mapper>
